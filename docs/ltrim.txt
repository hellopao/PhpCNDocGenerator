语法:
   string ltrim    ( string $str   [, string $character_mask  ] )
说明:
删除字符串开头的空白字符（或其他字符）
参数:
  参数              str                  输入的字符串。                        character_mask                  通过参数 character_mask，你也可以指定想要删除的字符，简单地列出你想要删除的所有字符即可。使用..，可以指定字符的范围。                     
返回值:
  返回值     该函数返回一个删除了 str 最左边的空白字符的字符串。   如果不使用第二个参数，   ltrim() 仅删除以下字符：                     &quot; &quot; (ASCII 32      (0x20))，普通空白字符。                        &quot;\t&quot; (ASCII 9      (0x09))， 制表符.                        &quot;\n&quot; (ASCII 10      (0x0A))，换行符。                        &quot;\r&quot; (ASCII 13      (0x0D))，回车符。                        &quot;\0&quot; (ASCII 0      (0x00))， NUL空字节符。                         &quot;\x0B&quot; (ASCII 11      (0x0B))，垂直制表符。               
示例:

<?php
$text = "\t\tThese are a few words :) ...  ";
$binary = "\x09Example string\x0A";
$hello  = "Hello World";
var_dump($text, $binary, $hello);
print "\n";
$trimmed = ltrim($text);
var_dump($trimmed);
$trimmed = ltrim($text, " \t.");
var_dump($trimmed);
$trimmed = ltrim($hello, "Hdle");
var_dump($trimmed);
// 删除 $binary 开头的 ASCII 控制字符
// (从 0 到 31，包括 0 和 31)
$clean = ltrim($binary, "\x00..\x1F");
var_dump($clean);
?>
以上例程会输出：
string(32) "        These are a few words :) ...  "
string(16) "    Example string
"
string(11) "Hello World"
string(30) "These are a few words :) ...  "
string(30) "These are a few words :) ...  "
string(7) "o World"
string(15) "Example string
"
