语法:
   array func_get_args    ( void   )
说明:
获取函数参数列表的数组。
返回值:
  返回值     返回一个数组，其中每个元素都是目前用户自定义函数的参数列表的相应元素的副本。   
示例:

<?php
function foo()
{
    $numargs = func_num_args();
    echo "Number of arguments: $numargs<br />\n";
    if ($numargs >= 2) {
        echo "Second argument is: " . func_get_arg(1) . "<br />\n";
    }
    $arg_list = func_get_args();
    for ($i = 0; $i < $numargs; $i++) {
        echo "Argument $i is: " . $arg_list[$i] . "<br />\n";
    }
}
foo(1, 2, 3);
?>
以上例程会输出：
Number of arguments: 3<br />
Second argument is: 2<br />
Argument 0 is: 1<br />
Argument 1 is: 2<br />
Argument 2 is: 3<br />

test.php
<?php
function foo() {
    include './fga.inc';
}
foo('First arg', 'Second arg');
?>
fga.inc
<?php
$args = func_get_args();
var_export($args);
?>

     PHP 5.3 版本之前的输出：
    
array (
  0 => &#039;First arg&#039;,
  1 => &#039;Second arg&#039;,
)

     PHP 5.3 和之后的版本的输出:
    
Warning: func_get_args():  Called from the global scope - no function
context in /home/torben/Desktop/code/ml/fga.inc on line 3
false

<?php
function byVal($arg) {
    echo 'As passed     : ', var_export(func_get_args()), PHP_EOL;
    $arg = 'baz';
    echo 'After change  : ', var_export(func_get_args()), PHP_EOL;
}
function byRef(&$arg) {
    echo 'As passed     : ', var_export(func_get_args()), PHP_EOL;
    $arg = 'baz';
    echo 'After change  : ', var_export(func_get_args()), PHP_EOL;
}
$arg = 'bar';
byVal($arg);
byRef($arg);
?>
以上例程会输出：
As passed     : array (
  0 => &#039;bar&#039;,
)
After change  : array (
  0 => &#039;bar&#039;,
)
As passed     : array (
  0 => &#039;bar&#039;,
)
After change  : array (
  0 => &#039;baz&#039;,
)
    