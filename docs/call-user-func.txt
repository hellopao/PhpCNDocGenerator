语法:
   mixed call_user_func    ( callable $callback   [, mixed $parameter   [, mixed $...  ]] )
说明:
把第一个参数作为回调函数（callback），并且将其余的参数作为回调函数的参数。
参数:
  参数              callback                  将被调用的回调函数（callable）。                        parameter                  0个或者更多的参数，都将被传如回调函数。            Note:                请注意，传入call_user_func()的参数不能为引用传递。                 Example #1 call_user_func()的例子和引用传参的例子         &lt;?phperror_reporting(E_ALL);function&nbsp;increment(&amp;$var){&nbsp;&nbsp;&nbsp;&nbsp;$var++;}$a&nbsp;=&nbsp;0;call_user_func('increment',&nbsp;$a);echo&nbsp;$a."\n";call_user_func_array('increment',&nbsp;array(&amp;$a));&nbsp;//&nbsp;You&nbsp;can&nbsp;use&nbsp;this&nbsp;instead&nbsp;before&nbsp;PHP&nbsp;5.3echo&nbsp;$a."\n";?&gt;
返回值:
  返回值     返回回调函数的返回值，如果错误则返回FALSE。   
示例:

<?php
error_reporting(E_ALL);
function increment(&$var)
{
    $var++;
}
$a = 0;
call_user_func('increment', $a);
echo $a."\n";
call_user_func_array('increment', array(&$a)); // You can use this instead before PHP 5.3
echo $a."\n";
?>
以上例程会输出：
0
1

<?php
function barber($type)
{
    echo "You wanted a $type haircut, no problem\n";
}
call_user_func('barber', "mushroom");
call_user_func('barber', "shave");
?>
以上例程会输出：
You wanted a mushroom haircut, no problem
You wanted a shave haircut, no problem

<?php
namespace Foobar;
class Foo {
    static public function test() {
        print "Hello world!\n";
    }
}
call_user_func(__NAMESPACE__ .'\Foo::test'); // As of PHP 5.3.0
call_user_func(array(__NAMESPACE__ .'\Foo', 'test')); // As of PHP 5.3.0
?>
以上例程会输出：
Hello world!
Hello world!

<?php
class myclass {
    static function say_hello()
    {
        echo "Hello!\n";
    }
}
$classname = "myclass";
call_user_func(array($classname, 'say_hello'));
call_user_func($classname .'::say_hello'); // As of 5.2.3
$myobject = new myclass();
call_user_func(array($myobject, 'say_hello'));
?>
以上例程会输出：
Hello!
Hello!
Hello!

<?php
call_user_func(function($arg) { print "[$arg]\n"; }, 'test'); /* As of PHP 5.3.0 */
?>
以上例程会输出：
[test]
