语法:
   string hash_pbkdf2    ( string $algo   , string $password   , string $salt   , int $iterations   [, int $length = 0   [, bool $raw_output = false  ]] )
参数:
  参数              algo                  哈希算法名称，例如       md5，sha256，haval160,4 等。       受支持的算法清单请参见 hash_algos()。                        password                  要进行导出的密码。                        salt                  进行导出时所使用的“盐”，这个值应该是随机生成的。                        iterations                  进行导出时的迭代次数。                        length                  密钥导出数据的长度。如果 raw_output 为 TRUE，       此参数为密钥导出数据的字节长度。如果 raw_output 为 FALSE，       此参数为密钥导出数据的字节长度的 2 倍，因为 1 个字节数据对应的 2 个 16 进制的字符。                   如果传入 0，则使用所选算法的完整输出大小。                        raw_output                  设置为 TRUE 输出原始二进制数据，       设置为 FALSE 输出小写 16 进制字符串。                     
返回值:
  返回值     如果 raw_output 设置为 TRUE，    则返回原始二进制数据表示的信息摘要，   否则返回 16 进制小写字符串格式表示的信息摘要。   
示例:

<?php
$password = "password";
$iterations = 1000;
// 使用 mcrypt_create_iv() 生成随机初始向量，
// 也可以使用 openssl_random_pseudo_bytes() 或其他适合的随机源。
$salt = mcrypt_create_iv(16, MCRYPT_DEV_URANDOM);
$hash = hash_pbkdf2("sha256", $password, $salt, $iterations, 20);
echo $hash;
?>
以上例程的输出类似于：
120fb6cffcf8b32c43e7
