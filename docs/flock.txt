语法:
   bool flock    ( resource $handle   , int $operation   [, int &$wouldblock  ] )
说明:
flock()允许执行一个简单的可以在任何平台中使用的读取/写入模型（包括大部分的Unix派生版和甚至是Windows）。
参数:
  参数              handle           文件系统指针，是典型地由fopen() 创建的 resource(资源)。                  operation                  operation   可以是以下值之一：                                 LOCK_SH取得共享锁定（读取的程序）。                                           LOCK_EX 取得独占锁定（写入的程序。                                            LOCK_UN 释放锁定（无论共享或独占）。                                           如果不希望 flock() 在锁定时堵塞，则是       LOCK_NB（Windows 上还不支持）。                        wouldblock                  如果锁定会堵塞的话（EWOULDBLOCK   错误码情况下），可选的第三个参数会被设置为 TRUE。（Windows 上不支持）                     
返回值:
  返回值     成功时返回 TRUE， 或者在失败时返回 FALSE。   
示例:

<?php
$fp = fopen("/tmp/lock.txt", "r+");
if (flock($fp, LOCK_EX)) {  // 进行排它型锁定
    ftruncate($fp, 0);      // truncate file
    fwrite($fp, "Write something here\n");
    fflush($fp);            // flush output before releasing the lock
    flock($fp, LOCK_UN);    // 释放锁定
} else {
    echo "Couldn't get the lock!";
}
fclose($fp);
?>

<?php
$fp = fopen('/tmp/lock.txt', 'r+');
/* Activate the LOCK_NB option on an LOCK_EX operation */
if(!flock($fp, LOCK_EX | LOCK_NB)) {
    echo 'Unable to obtain lock';
    exit(-1);
}
/* ... */
fclose($fp);
?>
