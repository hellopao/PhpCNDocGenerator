语法:
   array array_replace_recursive    ( array $array1   , array $array2   [, array $...  ] )
说明:
array_replace_recursive()使用后面数组元素的值替换数组array1的值。如果一个键存在于第一个数组同时也存在于第二个数组，它的值将被第二个数组中的值替换。如果一个键存在于第二个数组，但是不存在于第一个数组，则会在第一个数组中创建这个元素。如果一个键仅存在于第一个数组，它将保持不变。如果传递了多个替换数组，它们将被按顺序依次处理，后面的数组将覆盖之前的值。
参数:
  参数              array1                  替换该数组的值。                        array2                  从此数组中提取替换值。                        ...                  可选项。更多包含要提取元素的数组。                     
返回值:
  返回值     返回一个数组。如果发生错误，将返回 NULL。   
示例:

<?php
$base = array('citrus' => array( "orange") , 'berries' => array("blackberry", "raspberry"), );
$replacements = array('citrus' => array('pineapple'), 'berries' => array('blueberry'));
$basket = array_replace_recursive($base, $replacements);
print_r($basket);
$basket = array_replace($base, $replacements);
print_r($basket);
?>
以上例程会输出：
Array
(
    [citrus] => Array
        (
            [0] => pineapple
        )
    [berries] => Array
        (
            [0] => blueberry
            [1] => raspberry
        )
)
Array
(
    [citrus] => Array
        (
            [0] => pineapple
        )
    [berries] => Array
        (
            [0] => blueberry
        )
)

<?php
$base = array('citrus' => array("orange") , 'berries' => array("blackberry", "raspberry"), 'others' => 'banana' );
$replacements = array('citrus' => 'pineapple', 'berries' => array('blueberry'), 'others' => array('litchis'));
$replacements2 = array('citrus' => array('pineapple'), 'berries' => array('blueberry'), 'others' => 'litchis');
$basket = array_replace_recursive($base, $replacements, $replacements2);
print_r($basket);
?>
以上例程会输出：
Array
(
    [citrus] => Array
        (
            [0] => pineapple
        )
    [berries] => Array
        (
            [0] => blueberry
            [1] => raspberry
        )
    [others] => litchis
)
