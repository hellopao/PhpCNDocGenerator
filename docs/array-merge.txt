语法:
   array array_merge    ( array $array1   [, array $...  ] )
说明:
array_merge()将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。
参数:
  参数              array1                  Initial array to merge.                        ...                  Variable list of arrays to merge.                     
返回值:
  返回值     返回结果数组。   
示例:

<?php
$beginning = 'foo';
$end = array(1 => 'bar');
$result = array_merge((array)$beginning, (array)$end);
print_r($result);
?>
以上例程会输出：
    
    Array
    (
        [0] => foo
        [1] => bar
    )

<?php
$array1 = array("color" => "red", 2, 4);
$array2 = array("a", "b", "color" => "green", "shape" => "trapezoid", 4);
$result = array_merge($array1, $array2);
print_r($result);
?>
以上例程会输出：
Array
(
    [color] => green
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [shape] => trapezoid
    [4] => 4
)

<?php
$array1 = array();
$array2 = array(1 => "data");
$result = array_merge($array1, $array2);
?>

     别忘了数字键名将会被重新编号！
    
Array
(
    [0] => data
)

     如果你想完全保留原有数组并只想新的数组附加到后面，用 + 运算符：
    
<?php
$array1 = array(0 => 'zero_a', 2 => 'two_a', 3 => 'three_a');
$array2 = array(1 => 'one_b', 3 => 'three_b', 4 => 'four_b');
$result = $array1 + $array2;
var_dump($result);
?>

     The keys from the first array will be preserved. If an array key
     exists in both arrays, then the element from the first array will
     be used and the matching key&#039;s element from the second array will
     be ignored.
    
array(5) {
  [0]=>
  string(6) "zero_a"
  [2]=>
  string(5) "two_a"
  [3]=>
  string(7) "three_a"
  [1]=>
  string(5) "one_b"
  [4]=>
  string(6) "four_b"
}
