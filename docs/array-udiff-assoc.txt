语法:
   array array_udiff_assoc    ( array $array1   , array $array2   [, array $ ...   ], callable $data_compare_func   )
说明:
此比较是通过用户提供的回调函数来进行的。如果认为第一个参数小于，等于，或大于第二个参数时必须分别返回一个小于零，等于零，或大于零的整数。
参数:
  参数              array1                  第一个数组。                        array2                  第二个数组。                        data_compare_func                  在第一个参数小于，等于或大于第二个参数时，该比较函数必须相应地返回一个小于，等于或大于 0 的整数。            int callback ( mixed $a, mixed $b )
返回值:
  返回值   array_udiff_assoc() 返回一个数组，该数组包括了所有在   array1 中但是不在任何其它参数数组中的值。注意和   array_diff() 与 array_udiff()   不同的是键名也用于比较。数组数据的比较是用用户提供的回调函数进行的。在此方面和   array_diff_assoc() 的行为正好相反，后者是用内部函数进行比较的。   
示例:

<?php
class cr {
    private $priv_member;
    function cr($val)
    {
        $this->priv_member = $val;
    }
    static function comp_func_cr($a, $b)
    {
        if ($a->priv_member === $b->priv_member) return 0;
        return ($a->priv_member > $b->priv_member)? 1:-1;
    }
}
$a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23), 1=> new cr(4), 2 => new cr(-15),);
$b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr(3), 1=> new cr(4), 2 => new cr(-15),);
$result = array_udiff_assoc($a, $b, array("cr", "comp_func_cr"));
print_r($result);
?>
以上例程会输出：
Array
(
    [0.1] => cr Object
        (
            [priv_member:private] => 9
        )
    [0.5] => cr Object
        (
            [priv_member:private] => 12
        )
    [0] => cr Object
        (
            [priv_member:private] => 23
        )
)
