语法:
   bool spl_autoload_register    ([ callable $autoload_function   [, bool $throw = true   [, bool $prepend = false  ]]] )
说明:
将函数注册到SPL__autoload函数队列中。如果该队列中的函数尚未激活，则激活它们。
参数:
  参数              autoload_function                  欲注册的自动装载函数。如果没有提供任何参数，则自动注册 autoload 的默认实现函数spl_autoload()。                        throw                  此参数设置了 autoload_function 无法成功注册时，       spl_autoload_register()是否抛出异常。                        prepend                  如果是 true，spl_autoload_register() 会添加函数到队列之首，而不是队列尾部。                     
返回值:
  返回值     成功时返回 TRUE， 或者在失败时返回 FALSE。   
示例:

<?php
// function __autoload($class) {
//     include 'classes/' . $class . '.class.php';
// }
function my_autoloader($class) {
    include 'classes/' . $class . '.class.php';
}
spl_autoload_register('my_autoloader');
// 或者，自 PHP 5.3.0 起可以使用一个匿名函数
spl_autoload_register(function ($class) {
    include 'classes/' . $class . '.class.php';
});
?>

<?php
namespace Foobar;
class Foo {
    static public function test($name) {
        print '[['. $name .']]';
    }
}
spl_autoload_register(__NAMESPACE__ .'\Foo::test'); // 自 PHP 5.3.0 起
new InexistentClass;
?>
以上例程的输出类似于：
[[Foobar\InexistentClass]]
Fatal error: Class &#039;Foobar\InexistentClass&#039; not found in ...
