语法:
   void header    ( string $string   [, bool $replace = true   [, int $http_response_code  ]] )
说明:
header()被用来发送自定义的HTTP报文。关于HTTP报文的更多信息请参考&raquo;&nbsp;HTTP/1.1specification。
参数:
  参数              string                  报文字符串。                   有两种特别的报文请求。第一种以“HTTP/”开头的 (case is not       significant)，将会被用来计算出将要发送的HTTP状态码。 例如你在Apache服务器上做了用一个PHP脚本来处理对不存在文件的请求（使用错误文档指令）的配置， 那么你在向服务器发送的报文请求的时候可能更希望你的脚本生成正确的状态码。                           &lt;?phpheader("HTTP/1.0&nbsp;404&nbsp;Not&nbsp;Found");?&gt;
返回值:
  返回值     没有返回值。   
示例:

<html>
<?php
/* This will give an error. Note the output
 * above, which is before the header() call */
header('Location: http://www.example.com/');
exit;
?>

<?php
header("HTTP/1.0 404 Not Found");
?>

<?php
header("Location: http://www.example.com/"); /* Redirect browser */
/* Make sure that code below does not get executed when we redirect. */
exit;
?>

<?php
header('WWW-Authenticate: Negotiate');
header('WWW-Authenticate: NTLM', false);
?>

     如果你想提醒用户去保存你发送的数据，例如保存一个生成的PDF文件。你可以使用&raquo; Content-Disposition的报文信息来提供一个推荐的文件名，并且强制浏览器显示一个文件下载的对话框。
    
<?php
// We'll be outputting a PDF
header('Content-type: application/pdf');
// It will be called downloaded.pdf
header('Content-Disposition: attachment; filename="downloaded.pdf"');
// The PDF source is in original.pdf
readfile('original.pdf');
?>

     PHP脚本总是会生成一些动态内容，而这些内容是不应该被缓存的，不管是客户端浏览器还是在服务器端和客户端浏览器之间的任何代理。我们可以像这样来强制设置浏览器和各个代理层不缓存数据：
    
<?php
header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
header("Expires: Sat, 26 Jul 1997 05:00:00 GMT"); // Date in the past
?>

     Note: 
      
       也许你会遇到这样的情况，那就是即使你没使用上面这段代码，你的页面也没有被缓存。大多数情况是因为用户可以自己设置他们的浏览器从而改变浏览器默认的缓存行为。一旦发送了上面这段报文信息，那么你就应该重写那些可能用到缓存了的代码。
      
      
       此外，在启用session的情况下，session_cache_limiter()和session.cache_limiter的配置可以用来自动地生成正确的缓存相关的头信息。
      
     
    
<?php
/* Redirect to a different page in the current directory that was requested */
$host  = $_SERVER['HTTP_HOST'];
$uri   = rtrim(dirname($_SERVER['PHP_SELF']), '/\\');
$extra = 'mypage.php';
header("Location: http://$host$uri/$extra");
exit;
?>
