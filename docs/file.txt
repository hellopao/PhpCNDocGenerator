语法:
   array file    ( string $filename   [, int $flags = 0   [, resource $context  ]] )
说明:
把整个文件读入一个数组中。
参数:
  参数              filename                  文件的路径。            Tip如已启用fopen 包装器，在此函数中， URL 可作为文件名。关于如何指定文件名详见 fopen()。各种wapper 的不同功能请参见 支持的协议和封装协议，注意其用法及其可提供的预定义变量。
返回值:
  返回值     Returns the file in an array. Each element of the array corresponds to a   line in the file, with the newline still attached. Upon failure,   file() returns FALSE.    Note:        Each line in the resulting array will include the line ending, unless    FILE_IGNORE_NEW_LINES is used, so you still need to    use rtrim() if you do not want the line ending    present.       Note: 在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP不能正确的识别行结束符，启用运行时配置可选项 auto_detect_line_endings也许可以解决此问题。 
示例:

<?php
// 将一个文件读入数组。本例中通过 HTTP 从 URL 中取得 HTML 源文件。
$lines = file('http://www.example.com/');
// 在数组中循环，显示 HTML 的源文件并加上行号。
foreach ($lines as $line_num => $line) {
    echo "Line #<b>{$line_num}</b> : " . htmlspecialchars($line) . "<br />\n";
}
// 另一个例子将 web 页面读入字符串。参见 file_get_contents()。
$html = implode('', file('http://www.example.com/'));
// 从 PHP 5 开始可以使用可选标记参数
$trimmed = file('somefile.txt', FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
?>
