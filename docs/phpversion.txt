语法:
   string phpversion    ([ string $extension  ] )
说明:
返回了包含当前运行PHP解释器或扩展版本信息的string。
参数:
  参数              extension                  可选的扩展名。                     
返回值:
  返回值     如果指定了可选参数 extension，phpversion()会返回该扩展的版本。   如果没有对应的版本信息，或者该扩展未启用，则返回 FALSE。   
示例:

<?php
// prints e.g. 'Current PHP version: 4.1.1'
echo 'Current PHP version: ' . phpversion();
// prints e.g. '2.0' or nothing if the extension isn't enabled
echo phpversion('tidy');
?>

<?php
// PHP_VERSION_ID 自 PHP 5.2.7 起有效，
// 如果我们的版本低于该版本，则用以下代码来模拟 
if (!defined('PHP_VERSION_ID')) {
    $version = explode('.', PHP_VERSION);
    define('PHP_VERSION_ID', ($version[0] * 10000 + $version[1] * 100 + $version[2]));
}
// PHP_VERSION_ID 定义为一个数字，PHP 版本越新，数字越大。
// 它的定义是以下的表达式：
//
// $version_id = $major_version * 10000 + $minor_version * 100 + $release_version;
//
// 现在我们可以通过 PHP_VERSION_ID 来检查 PHP 版本，
// 而不用每次都必须用 version_compare() 来检查 PHP 是否支持某个功能。
//
// 比如，我们在此可以定义一系列 PHP_VERSION_* constants 常量，
// 而在 5.2.7 之前的版本并没有被定义。
if (PHP_VERSION_ID < 50207) {
    define('PHP_MAJOR_VERSION',   $version[0]);
    define('PHP_MINOR_VERSION',   $version[1]);
    define('PHP_RELEASE_VERSION', $version[2]);
    // 等等， ...
}
?>
