语法:
   array get_meta_tags    ( string $filename   [, bool $use_include_path = false  ] )
说明:
打开filename逐行解析文件中的&lt;meta&gt;标签。解析工作将在&lt;/head&gt;处停止。
参数:
  参数              filename                  HTML 文件的路径字符串。       此参数可以是本地文件也可以是一个   URL。                           Example #1 get_meta_tags() 解析了什么        &lt;meta name=&quot;author&quot; content=&quot;name&quot;&gt;&lt;meta name=&quot;keywords&quot; content=&quot;php documentation&quot;&gt;&lt;meta name=&quot;DESCRIPTION&quot; content=&quot;a php manual&quot;&gt;&lt;meta name=&quot;geo.position&quot; content=&quot;49.33;-86.59&quot;&gt;&lt;/head&gt; &lt;!-- 解析工作在此处停止 --&gt;
返回值:
  返回值     返回一个数组，包含所有解析过的 meta 标签。       返回的关联数组以属性 name 的值作为键，属性 content    的值作为值，所以你可以很容易地使用标准数组函数遍历此关联数组或访问某个值。   属性   name 中的特殊字符将使用‘_’替换，而其它字符则转换成小写。如果有两个   meta 标签拥有相同的 name，则只返回最后出现的那一个。   
示例:

<meta name="author" content="name">
<meta name="keywords" content="php documentation">
<meta name="DESCRIPTION" content="a php manual">
<meta name="geo.position" content="49.33;-86.59">
</head> <!-- 解析工作在此处停止 -->

<?php
// 假设上边的标签是在 www.example.com 中
$tags = get_meta_tags('http://www.example.com/');
// 注意所有的键（key）均为小写，而键中的‘.’则转换成了‘_’。
echo $tags['author'];       // name
echo $tags['keywords'];     // php documentation
echo $tags['description'];  // a php manual
echo $tags['geo_position']; // 49.33;-86.59
?>
